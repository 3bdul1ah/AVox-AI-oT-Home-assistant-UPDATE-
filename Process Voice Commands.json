[
    {
        "id": "2d794f9e07d29405",
        "type": "tab",
        "label": "Process Voice Commands",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "1630cb1ef4140b87",
        "type": "mqtt out",
        "z": "2d794f9e07d29405",
        "name": "",
        "topic": "Home/Room1/Light",
        "qos": "",
        "retain": "",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "d6670896eb4c043f",
        "x": 650,
        "y": 80,
        "wires": []
    },
    {
        "id": "e2e4b45e93addfe8",
        "type": "mqtt out",
        "z": "2d794f9e07d29405",
        "name": "",
        "topic": "Home/Room2/Light",
        "qos": "",
        "retain": "",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "d6670896eb4c043f",
        "x": 630,
        "y": 240,
        "wires": []
    },
    {
        "id": "50f6ec43bbda52e8",
        "type": "ui_switch",
        "z": "2d794f9e07d29405",
        "name": "",
        "label": "",
        "tooltip": "",
        "group": "b71a92b6420df409",
        "order": 0,
        "width": "0",
        "height": "0",
        "passthru": true,
        "decouple": "false",
        "topic": "Home/Room2/Light",
        "topicType": "msg",
        "style": "",
        "onvalue": "turn on room two light",
        "onvalueType": "str",
        "onicon": "",
        "oncolor": "",
        "offvalue": "turn off room two light",
        "offvalueType": "str",
        "officon": "",
        "offcolor": "",
        "animate": false,
        "className": "/* Style for all switch widgets */ .ui-switch {   width: 50px; /* Adjust the width as needed */   height: 30px; /* Adjust the height as needed */   background-color: #ccc; /* Background color when the switch is off */   border: 1px solid #999;   border-radius: 15px; /* To make it look like a circular button */   position: relative;   display: inline-block; /* To align switches horizontally */ }  /* Style for the switch when it's in the 'on' state */ .ui-switch.ui-switch-checked {   background-color: #00FF00; /* Background color when the switch is on */ }  /* Style for the slider button inside the switch */ .ui-switch .slider {   width: 25px; /* Width of the sliding button */   height: 25px; /* Height of the sliding button */   background-color: #fff; /* Color of the sliding button */   border: 1px solid #999;   border-radius: 50%; /* To make it look like a circular button */   position: absolute;   top: 2px; /* Adjust the top position as needed */   transition: 0.4s; }",
        "x": 190,
        "y": 260,
        "wires": [
            [
                "52dc4b742b95a87c"
            ]
        ]
    },
    {
        "id": "4c09b0d1e399ca11",
        "type": "ui_switch",
        "z": "2d794f9e07d29405",
        "name": "",
        "label": "",
        "tooltip": "",
        "group": "0a9f878f0b06b3f6",
        "order": 1,
        "width": 0,
        "height": 0,
        "passthru": true,
        "decouple": "false",
        "topic": "Home/Room1/Light",
        "topicType": "msg",
        "style": "",
        "onvalue": "turn on room one light",
        "onvalueType": "str",
        "onicon": "",
        "oncolor": "",
        "offvalue": "turn off room one light",
        "offvalueType": "str",
        "officon": "",
        "offcolor": "",
        "animate": false,
        "className": "/* Style for all switch widgets */ .ui-switch {   width: 50px; /* Adjust the width as needed */   height: 30px; /* Adjust the height as needed */   background-color: #ccc; /* Background color when the switch is off */   border: 1px solid #999;   border-radius: 15px; /* To make it look like a circular button */   position: relative;   display: inline-block; /* To align switches horizontally */ }  /* Style for the switch when it's in the 'on' state */ .ui-switch.ui-switch-checked {   background-color: #00FF00; /* Background color when the switch is on */ }  /* Style for the slider button inside the switch */ .ui-switch .slider {   width: 25px; /* Width of the sliding button */   height: 25px; /* Height of the sliding button */   background-color: #fff; /* Color of the sliding button */   border: 1px solid #999;   border-radius: 50%; /* To make it look like a circular button */   position: absolute;   top: 2px; /* Adjust the top position as needed */   transition: 0.4s; }",
        "x": 210,
        "y": 100,
        "wires": [
            [
                "f4f4e8a30baafe40"
            ]
        ]
    },
    {
        "id": "35ee07ab673dfb48",
        "type": "ui_switch",
        "z": "2d794f9e07d29405",
        "name": "",
        "label": "",
        "tooltip": "",
        "group": "9853f7386e65dc3b",
        "order": 1,
        "width": 0,
        "height": 0,
        "passthru": true,
        "decouple": "false",
        "topic": "Home/Room1/Fan",
        "topicType": "msg",
        "style": "",
        "onvalue": "turn on room one fan",
        "onvalueType": "str",
        "onicon": "",
        "oncolor": "",
        "offvalue": "turn off room one fan",
        "offvalueType": "str",
        "officon": "",
        "offcolor": "",
        "animate": false,
        "className": "/* Style for all switch widgets */ .ui-switch {   width: 50px; /* Adjust the width as needed */   height: 30px; /* Adjust the height as needed */   background-color: #ccc; /* Background color when the switch is off */   border: 1px solid #999;   border-radius: 15px; /* To make it look like a circular button */   position: relative;   display: inline-block; /* To align switches horizontally */ }  /* Style for the switch when it's in the 'on' state */ .ui-switch.ui-switch-checked {   background-color: #00FF00; /* Background color when the switch is on */ }  /* Style for the slider button inside the switch */ .ui-switch .slider {   width: 25px; /* Width of the sliding button */   height: 25px; /* Height of the sliding button */   background-color: #fff; /* Color of the sliding button */   border: 1px solid #999;   border-radius: 50%; /* To make it look like a circular button */   position: absolute;   top: 2px; /* Adjust the top position as needed */   transition: 0.4s; }",
        "x": 210,
        "y": 140,
        "wires": [
            [
                "8bcdcc8a724f198b"
            ]
        ]
    },
    {
        "id": "72b1c1f3849ec929",
        "type": "ui_switch",
        "z": "2d794f9e07d29405",
        "name": "",
        "label": "",
        "tooltip": "",
        "group": "69d923bbeb4b9ab0",
        "order": 0,
        "width": "0",
        "height": "0",
        "passthru": true,
        "decouple": "false",
        "topic": "Home/Room2/Fan",
        "topicType": "msg",
        "style": "",
        "onvalue": "turn on room two fan",
        "onvalueType": "str",
        "onicon": "",
        "oncolor": "",
        "offvalue": "turn off room two fan",
        "offvalueType": "str",
        "officon": "",
        "offcolor": "",
        "animate": false,
        "className": "/* Style for all switch widgets */ .ui-switch {   width: 50px; /* Adjust the width as needed */   height: 30px; /* Adjust the height as needed */   background-color: #ccc; /* Background color when the switch is off */   border: 1px solid #999;   border-radius: 15px; /* To make it look like a circular button */   position: relative;   display: inline-block; /* To align switches horizontally */ }  /* Style for the switch when it's in the 'on' state */ .ui-switch.ui-switch-checked {   background-color: #00FF00; /* Background color when the switch is on */ }  /* Style for the slider button inside the switch */ .ui-switch .slider {   width: 25px; /* Width of the sliding button */   height: 25px; /* Height of the sliding button */   background-color: #fff; /* Color of the sliding button */   border: 1px solid #999;   border-radius: 50%; /* To make it look like a circular button */   position: absolute;   top: 2px; /* Adjust the top position as needed */   transition: 0.4s; }",
        "x": 190,
        "y": 300,
        "wires": [
            [
                "382b69f88801cce0"
            ]
        ]
    },
    {
        "id": "0ad96791724877dd",
        "type": "mqtt out",
        "z": "2d794f9e07d29405",
        "name": "",
        "topic": "Home/Room1/Fan",
        "qos": "",
        "retain": "",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "d6670896eb4c043f",
        "x": 650,
        "y": 160,
        "wires": []
    },
    {
        "id": "c4d1afa920cdd57a",
        "type": "mqtt out",
        "z": "2d794f9e07d29405",
        "name": "",
        "topic": "Home/Room2/Fan",
        "qos": "",
        "retain": "",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "d6670896eb4c043f",
        "x": 630,
        "y": 320,
        "wires": []
    },
    {
        "id": "f4f4e8a30baafe40",
        "type": "function",
        "z": "2d794f9e07d29405",
        "name": "Process Voice Command",
        "func": "var command = msg.payload;\nvar lightStatusRoom1;\n\nif (command === \"turn on room one light\") {\n    lightStatusRoom1 = \"on\";\n} else if (command === \"turn off room one light\") {\n    lightStatusRoom1 = \"off\";\n} else if (command === \"turn on lights\") {\n    lightStatusRoom1 = \"on\";  // Set the light to 100% intensity\n} else if (command === \"turn off lights\") {\n    lightStatusRoom1 = \"off\";\n} else if (command === \"room one light 25%\") {\n    lightStatusRoom1 = \"twentyfive\";\n} else if (command === \"room one light 50%\") {\n    lightStatusRoom1 = \"fifty\";\n} else if (command === \"room one light 75%\") {\n    lightStatusRoom1 = \"seventyfive\";\n} else if (command === \"room one light 25%\") {\n    lightStatusRoom1 = \"twentyfive\";\n} else if (command === \"room one light 50%\") {\n    lightStatusRoom1 = \"fifty\";\n} else if (command === \"room one light 75%\") {\n    lightStatusRoom1 = \"seventyfive\";\n} else {\n    return null;\n}\n\nmsg.topic = \"Home/Room1/Light\";\nmsg.payload = lightStatusRoom1;\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 410,
        "y": 100,
        "wires": [
            [
                "1630cb1ef4140b87",
                "7e5a27526cad518a"
            ]
        ]
    },
    {
        "id": "8bcdcc8a724f198b",
        "type": "function",
        "z": "2d794f9e07d29405",
        "name": "Process Voice Command",
        "func": "var command = msg.payload;\nvar fanStatusRoom1;\n\nif (command === \"turn on room one fan\") {\n    fanStatusRoom1 = \"on\";\n} else if (command === \"turn off room one fan\") {\n    fanStatusRoom1 = \"off\";\n} else if (command === \"turn on fans\") {\n    fanStatusRoom1 = \"on\";  // Set the fan to 100% speed\n} else if (command === \"turn off fans\") {\n    fanStatusRoom1 = \"off\";\n} else if (command === \"room one fan 25%\") {\n    fanStatusRoom1 = \"twentyfive\";\n} else if (command === \"room one fan 50%\") {\n    fanStatusRoom1 = \"fifty\";\n} else if (command === \"room one fan 75%\") {\n    fanStatusRoom1 = \"seventyfive\";\n} else {\n    return null;\n}\n\nmsg.topic = \"Home/Room1/Fan\";\nmsg.payload = fanStatusRoom1;\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 410,
        "y": 140,
        "wires": [
            [
                "0ad96791724877dd",
                "14465682328f59b6"
            ]
        ]
    },
    {
        "id": "52dc4b742b95a87c",
        "type": "function",
        "z": "2d794f9e07d29405",
        "name": "Process Voice Command",
        "func": "var command = msg.payload;\nvar lightStatusRoom2;\n\nif (command === \"turn on room two light\") {\n    lightStatusRoom2 = \"on\";\n} else if (command === \"turn off room two light\") {\n    lightStatusRoom2 = \"off\";\n} else if (command === \"turn on lights\") {\n    lightStatusRoom2 = \"on\";  // Set the light to 100% intensity\n} else if (command === \"turn off lights\") {\n    lightStatusRoom2 = \"off\";\n} else if (command === \"room two light 25%\") {\n    lightStatusRoom2 = \"twentyfive\";\n} else if (command === \"room two light 50%\") {\n    lightStatusRoom2 = \"fifty\";\n} else if (command === \"room two light 75%\") {\n    lightStatusRoom2 = \"seventyfive\";\n} else if (command === \"room two light 25%\") {\n    lightStatusRoom2 = \"twentyfive\";\n} else if (command === \"room two light 50%\") {\n    lightStatusRoom2  = \"fifty\";\n} else if (command === \"room two light 75%\") {\n    lightStatusRoom2= \"seventyfive\";\n} else {\n    return null;\n}\n\nmsg.topic = \"Home/Room2/Light\";\nmsg.payload = lightStatusRoom2;\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 390,
        "y": 260,
        "wires": [
            [
                "e2e4b45e93addfe8",
                "65ec29fa33797a07",
                "87d20c82ea61f743"
            ]
        ]
    },
    {
        "id": "382b69f88801cce0",
        "type": "function",
        "z": "2d794f9e07d29405",
        "name": "Process Voice Command",
        "func": "var command = msg.payload;\nvar fanStatusRoom2;\n\nif (command === \"turn on room two fan\") {\n    fanStatusRoom2 = \"on\";\n} else if (command === \"turn off room two fan\") {\n    fanStatusRoom2 = \"off\";\n} else if (command === \"turn on fans\") {\n    fanStatusRoom2 = \"on\";  // Set the fan to 100% speed\n} else if (command === \"turn off fans\") {\n    fanStatusRoom2 = \"off\";\n} else if (command === \"room two fan 25%\") {\n    fanStatusRoom2 = \"twentyfive\";\n} else if (command === \"room two fan 50%\") {\n    fanStatusRoom2 = \"fifty\";\n} else if (command === \"room two fan 75%\") {\n    fanStatusRoom2 = \"seventyfive\";\n} else {\n    return null;\n}\n\nmsg.topic = \"Home/Room2/Fan\";\nmsg.payload = fanStatusRoom2;\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 390,
        "y": 300,
        "wires": [
            [
                "c4d1afa920cdd57a"
            ]
        ]
    },
    {
        "id": "220c302781ae888b",
        "type": "mqtt in",
        "z": "2d794f9e07d29405",
        "name": "Input Voice",
        "topic": "input/voice",
        "qos": "2",
        "datatype": "auto-detect",
        "broker": "d6670896eb4c043f",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 160,
        "y": 200,
        "wires": [
            [
                "f4f4e8a30baafe40",
                "8bcdcc8a724f198b",
                "52dc4b742b95a87c",
                "382b69f88801cce0",
                "f4df26be384e086f"
            ]
        ]
    },
    {
        "id": "787477585adb4994",
        "type": "rpi-dht22",
        "z": "2d794f9e07d29405",
        "name": "",
        "topic": "SENSOR DHT22",
        "dht": "22",
        "pintype": "0",
        "pin": "4",
        "x": 630,
        "y": 400,
        "wires": [
            [
                "f49286a030e5ad3e",
                "e0da55e8b18af0e8",
                "fa5a3b4363874105"
            ]
        ]
    },
    {
        "id": "8842ce3229da51e2",
        "type": "inject",
        "z": "2d794f9e07d29405",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "5",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 450,
        "y": 440,
        "wires": [
            [
                "787477585adb4994"
            ]
        ]
    },
    {
        "id": "a964f642412933c6",
        "type": "debug",
        "z": "2d794f9e07d29405",
        "name": "debug 10",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 880,
        "y": 440,
        "wires": []
    },
    {
        "id": "67a62e763ac9ffab",
        "type": "ui_gauge",
        "z": "2d794f9e07d29405",
        "name": "Temperature",
        "group": "54c167c87cc74e90",
        "order": 1,
        "width": 0,
        "height": 0,
        "gtype": "gage",
        "title": "Temperature",
        "label": "°C",
        "format": "{{value}}",
        "min": 0,
        "max": "50",
        "colors": [
            "#00b500",
            "#e6e600",
            "#ca3838"
        ],
        "seg1": "",
        "seg2": "",
        "diff": false,
        "className": "",
        "x": 1110,
        "y": 500,
        "wires": []
    },
    {
        "id": "e0da55e8b18af0e8",
        "type": "function",
        "z": "2d794f9e07d29405",
        "name": "Humidity",
        "func": "msg.payload = msg.humidity;\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 880,
        "y": 320,
        "wires": [
            [
                "a00a33d28897b695",
                "8b68a82bd602230c",
                "5a5a69cbdd12b480"
            ]
        ]
    },
    {
        "id": "f49286a030e5ad3e",
        "type": "function",
        "z": "2d794f9e07d29405",
        "name": "Temperature",
        "func": "return msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 870,
        "y": 480,
        "wires": [
            [
                "a964f642412933c6",
                "67a62e763ac9ffab",
                "302e5527d223b0a6"
            ]
        ]
    },
    {
        "id": "a00a33d28897b695",
        "type": "debug",
        "z": "2d794f9e07d29405",
        "name": "debug 11",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 880,
        "y": 280,
        "wires": []
    },
    {
        "id": "8b68a82bd602230c",
        "type": "ui_chart",
        "z": "2d794f9e07d29405",
        "name": "",
        "group": "a0fc3a94.d321a8",
        "order": 2,
        "width": 0,
        "height": 0,
        "label": "Humidity Chart",
        "chartType": "line",
        "legend": "false",
        "xformat": "HH:mm:ss",
        "interpolate": "step",
        "nodata": "",
        "dot": false,
        "ymin": "0",
        "ymax": "100",
        "removeOlder": 1,
        "removeOlderPoints": "",
        "removeOlderUnit": "60",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#1f77b4",
            "#aec7e8",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "className": "",
        "x": 1120,
        "y": 280,
        "wires": [
            []
        ]
    },
    {
        "id": "302e5527d223b0a6",
        "type": "ui_chart",
        "z": "2d794f9e07d29405",
        "name": "",
        "group": "54c167c87cc74e90",
        "order": 2,
        "width": 0,
        "height": 0,
        "label": "Temperature Chart",
        "chartType": "line",
        "legend": "false",
        "xformat": "HH:mm:ss",
        "interpolate": "step",
        "nodata": "",
        "dot": false,
        "ymin": "0",
        "ymax": "50",
        "removeOlder": 1,
        "removeOlderPoints": "",
        "removeOlderUnit": "1",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#1f77b4",
            "#aec7e8",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "className": "",
        "x": 1130,
        "y": 440,
        "wires": [
            []
        ]
    },
    {
        "id": "5a5a69cbdd12b480",
        "type": "ui_gauge",
        "z": "2d794f9e07d29405",
        "name": "Humidity",
        "group": "a0fc3a94.d321a8",
        "order": 1,
        "width": 0,
        "height": 0,
        "gtype": "gage",
        "title": "Humidity",
        "label": "%",
        "format": "{{value}}",
        "min": "1",
        "max": "100",
        "colors": [
            "#00b500",
            "#e6e600",
            "#ca3838"
        ],
        "seg1": "",
        "seg2": "",
        "diff": false,
        "className": "",
        "x": 1120,
        "y": 320,
        "wires": []
    },
    {
        "id": "b4b430bc608a6453",
        "type": "rpi-dht22",
        "z": "2d794f9e07d29405",
        "name": "",
        "topic": "SENSOR DHT22",
        "dht": "22",
        "pintype": "0",
        "pin": "4",
        "x": 370,
        "y": 560,
        "wires": [
            [
                "600d806816c00c20",
                "0b7905d9f40b8a0c",
                "fa5a3b4363874105"
            ]
        ]
    },
    {
        "id": "51fb8e14e611e588",
        "type": "inject",
        "z": "2d794f9e07d29405",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "5",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 170,
        "y": 560,
        "wires": [
            [
                "b4b430bc608a6453"
            ]
        ]
    },
    {
        "id": "3cd385879961c2d3",
        "type": "debug",
        "z": "2d794f9e07d29405",
        "name": "debug 12",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 600,
        "y": 700,
        "wires": []
    },
    {
        "id": "82599b533ca71c70",
        "type": "ui_gauge",
        "z": "2d794f9e07d29405",
        "name": "Temperature",
        "group": "e6aaf7a018d5c965",
        "order": 1,
        "width": 0,
        "height": 0,
        "gtype": "gage",
        "title": "Temperature",
        "label": "°C",
        "format": "{{value}}",
        "min": 0,
        "max": "50",
        "colors": [
            "#00b500",
            "#e6e600",
            "#ca3838"
        ],
        "seg1": "",
        "seg2": "",
        "diff": false,
        "className": "",
        "x": 830,
        "y": 760,
        "wires": []
    },
    {
        "id": "0b7905d9f40b8a0c",
        "type": "function",
        "z": "2d794f9e07d29405",
        "name": "Humidity",
        "func": "msg.payload = msg.humidity;\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 600,
        "y": 580,
        "wires": [
            [
                "a206288dbdd64bab",
                "27cf1ee5dcdbd843",
                "5382fea44834a995"
            ]
        ]
    },
    {
        "id": "600d806816c00c20",
        "type": "function",
        "z": "2d794f9e07d29405",
        "name": "Temperature",
        "func": "return msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 590,
        "y": 740,
        "wires": [
            [
                "3cd385879961c2d3",
                "82599b533ca71c70",
                "a451c1f1d3d8cbc4"
            ]
        ]
    },
    {
        "id": "a206288dbdd64bab",
        "type": "debug",
        "z": "2d794f9e07d29405",
        "name": "debug 13",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 600,
        "y": 540,
        "wires": []
    },
    {
        "id": "27cf1ee5dcdbd843",
        "type": "ui_chart",
        "z": "2d794f9e07d29405",
        "name": "",
        "group": "0a557ede326d22a0",
        "order": 2,
        "width": 0,
        "height": 0,
        "label": "Humidity Chart",
        "chartType": "line",
        "legend": "false",
        "xformat": "HH:mm:ss",
        "interpolate": "step",
        "nodata": "",
        "dot": false,
        "ymin": "0",
        "ymax": "100",
        "removeOlder": 1,
        "removeOlderPoints": "",
        "removeOlderUnit": "60",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#1f77b4",
            "#aec7e8",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "className": "",
        "x": 840,
        "y": 540,
        "wires": [
            []
        ]
    },
    {
        "id": "a451c1f1d3d8cbc4",
        "type": "ui_chart",
        "z": "2d794f9e07d29405",
        "name": "",
        "group": "e6aaf7a018d5c965",
        "order": 2,
        "width": 0,
        "height": 0,
        "label": "Temperature Chart",
        "chartType": "line",
        "legend": "false",
        "xformat": "HH:mm:ss",
        "interpolate": "step",
        "nodata": "",
        "dot": false,
        "ymin": "0",
        "ymax": "50",
        "removeOlder": 1,
        "removeOlderPoints": "",
        "removeOlderUnit": "60",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#1f77b4",
            "#aec7e8",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "className": "",
        "x": 850,
        "y": 700,
        "wires": [
            []
        ]
    },
    {
        "id": "5382fea44834a995",
        "type": "ui_gauge",
        "z": "2d794f9e07d29405",
        "name": "Humidity",
        "group": "0a557ede326d22a0",
        "order": 1,
        "width": 0,
        "height": 0,
        "gtype": "gage",
        "title": "Humidity",
        "label": "%",
        "format": "{{value}}",
        "min": 0,
        "max": "100",
        "colors": [
            "#00b500",
            "#e6e600",
            "#ca3838"
        ],
        "seg1": "",
        "seg2": "",
        "diff": false,
        "className": "",
        "x": 840,
        "y": 580,
        "wires": []
    },
    {
        "id": "7e5a27526cad518a",
        "type": "debug",
        "z": "2d794f9e07d29405",
        "name": "debug 14",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 760,
        "y": 40,
        "wires": []
    },
    {
        "id": "14465682328f59b6",
        "type": "debug",
        "z": "2d794f9e07d29405",
        "name": "debug 15",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 840,
        "y": 100,
        "wires": []
    },
    {
        "id": "f4df26be384e086f",
        "type": "debug",
        "z": "2d794f9e07d29405",
        "name": "debug 16",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 160,
        "y": 400,
        "wires": []
    },
    {
        "id": "65ec29fa33797a07",
        "type": "debug",
        "z": "2d794f9e07d29405",
        "name": "debug 17",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 380,
        "y": 360,
        "wires": []
    },
    {
        "id": "87d20c82ea61f743",
        "type": "debug",
        "z": "2d794f9e07d29405",
        "name": "debug 18",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 380,
        "y": 200,
        "wires": []
    },
    {
        "id": "fa5a3b4363874105",
        "type": "debug",
        "z": "2d794f9e07d29405",
        "name": "debug 19",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 340,
        "y": 680,
        "wires": []
    },
    {
        "id": "d6670896eb4c043f",
        "type": "mqtt-broker",
        "name": "broker.emqx.io",
        "broker": "broker.emqx.io",
        "port": "1883",
        "clientid": "",
        "autoConnect": true,
        "usetls": false,
        "protocolVersion": "4",
        "keepalive": "300",
        "cleansession": true,
        "autoUnsubscribe": true,
        "birthTopic": "",
        "birthQos": "0",
        "birthRetain": "false",
        "birthPayload": "",
        "birthMsg": {},
        "closeTopic": "",
        "closeQos": "0",
        "closeRetain": "false",
        "closePayload": "",
        "closeMsg": {},
        "willTopic": "",
        "willQos": "0",
        "willRetain": "false",
        "willPayload": "",
        "willMsg": {},
        "userProps": "",
        "sessionExpiry": ""
    },
    {
        "id": "b71a92b6420df409",
        "type": "ui_group",
        "name": "Light",
        "tab": "deec8db058b2a57b",
        "order": 4,
        "disp": true,
        "width": "6",
        "collapse": false,
        "className": ""
    },
    {
        "id": "0a9f878f0b06b3f6",
        "type": "ui_group",
        "name": "Light",
        "tab": "37b5f90d.5e1ef2",
        "order": 3,
        "disp": true,
        "width": "6",
        "collapse": false,
        "className": ""
    },
    {
        "id": "9853f7386e65dc3b",
        "type": "ui_group",
        "name": "Fan",
        "tab": "37b5f90d.5e1ef2",
        "order": 4,
        "disp": true,
        "width": "6",
        "collapse": false,
        "className": ""
    },
    {
        "id": "69d923bbeb4b9ab0",
        "type": "ui_group",
        "name": "Fan",
        "tab": "deec8db058b2a57b",
        "order": 5,
        "disp": true,
        "width": "6",
        "collapse": false,
        "className": ""
    },
    {
        "id": "54c167c87cc74e90",
        "type": "ui_group",
        "name": "Temperature",
        "tab": "37b5f90d.5e1ef2",
        "order": 2,
        "disp": true,
        "width": "6",
        "collapse": false,
        "className": ""
    },
    {
        "id": "a0fc3a94.d321a8",
        "type": "ui_group",
        "name": "Humidity",
        "tab": "37b5f90d.5e1ef2",
        "order": 1,
        "disp": true,
        "width": 6,
        "collapse": false,
        "className": ""
    },
    {
        "id": "e6aaf7a018d5c965",
        "type": "ui_group",
        "name": "Temperture",
        "tab": "deec8db058b2a57b",
        "order": 3,
        "disp": true,
        "width": "6",
        "collapse": false,
        "className": ""
    },
    {
        "id": "0a557ede326d22a0",
        "type": "ui_group",
        "name": "Humidity",
        "tab": "deec8db058b2a57b",
        "order": 2,
        "disp": true,
        "width": "6",
        "collapse": false,
        "className": ""
    },
    {
        "id": "deec8db058b2a57b",
        "type": "ui_tab",
        "name": "Room 2",
        "icon": "dashboard",
        "order": 2,
        "disabled": false,
        "hidden": false
    },
    {
        "id": "37b5f90d.5e1ef2",
        "type": "ui_tab",
        "name": "Room 1",
        "icon": "dashboard",
        "order": 1,
        "disabled": false,
        "hidden": false
    }
]